{"version":3,"sources":["main.js"],"names":["document","addEventListener","qrImage","getElementById","QRCode","toDataURL","siteUrl","width","err","url","error","window","src","track","querySelector","slides","querySelectorAll","index","interval","setInterval","nextSlide","transform","concat","updateSlide","style","length","prevSlide","startX","isDown","carousel","e","clearInterval","touches","clientX","diff","changedTouches","cursor","Math"],"mappings":"aACAA,SAASC,iBAAiB,mBAAoB,WAD9C,IAAAC,EAAAF,SAAAG,eAAA,WACAH,GAAAA,EAASC,CACP,IAAMC,EAAUF,OAASG,SAAAA,KAGvBC,OAAOC,UAAUC,EAAS,CAAEC,MAAO,KAAO,SAAUC,EAAKC,GAFvDP,EACII,QAAOI,MAAGC,GAChBT,EAA0CU,IAAAH,OAMzC,IANDI,MAAAb,SAAAc,cAAA,mBAODC,OAAAf,SAAAgB,iBAAA,iBAIHC,MAAA,EAIIC,SAAWC,YAAYC,UAAW,KAFtC,SAAML,cACNF,MAAII,MAAJI,UAAA,eAAAC,OAAA,IAAAL,MAAA,MAGA,SAASM,YACPV,OAAMW,MAAMH,GAAZN,OAAAU,OACDF,cAGCN,SAAKS,YACLH,OAAAA,MAAW,EAAAR,OAAAU,QAAAV,OAAAU,OACZF,cAICA,IAAAA,SAAWvB,SAAAG,eAAA,YAGbwB,OAAA,EAGIC,QAAS,EAFbC,SAAMA,iBAAoB1B,aAAe,SAAA2B,GACzCC,cAAAb,UACAS,OAAUG,EAAGE,QAAb,GAAAC,UAIEN,SAAM1B,iBAAgBgC,WAAtB,SAAAH,GAFF,IAAAI,EAAAJ,EAAAK,eAAA,GAAAF,QAAAN,OAKS1B,GAAT4B,KAAS5B,IAAAA,KAAiB,EAAAiC,EAAYR,YAAKN,aACzCF,SAAWY,YAAEK,UAAkBF,OACLC,SAAIjC,iBAAJ,YAAkC,SAAA6B,GAAKC,cAAAb,UAMjEU,QAAS,EALTV,OAAQY,EAAGX,QAHbU,SAAAL,MAAAY,OAAA,aAQER,SAAM3B,iBAAN,UAAA,SAAA6B,GACAH,GAAAA,OAAAA,CACAE,QAASL,EAJX,IAAAU,EAAAJ,EAAAG,QAAAN,OAOS1B,GAAT4B,KAAS5B,IAAAA,KAAT,EAA0BiC,EAAWR,YAAKN,aACxCS,SAAKD,MAAQQ,OAAA,OACbR,SAAST,YAATC,UAAA,QAEAS,SAAIQ,iBAAJ,aAAwB,SAAAP,GAAEI,SAAuCN,QAAA,EAQ/DC,SAASL,MAAMY,OAAS,OAP1BP,SAASL,YAAeJ,UAAxB","file":"main.min.js","sourcesContent":["// Générer le QR code\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const qrImage = document.getElementById(\"qrImage\");\r\n  if (qrImage) {\r\n    const siteUrl = window.location.href; \r\n    QRCode.toDataURL(siteUrl, { width: 250 }, function (err, url) {\r\n      if (err) {\r\n        console.error(err);\r\n        return;\r\n      }\r\n      qrImage.src = url;\r\n    });\r\n  }\r\n});\r\n\r\n\r\n// Carrousel\r\nconst track = document.querySelector('.carousel-track');\r\nconst slides = document.querySelectorAll('.carousel img');\r\nlet index = 0;\r\nlet interval = setInterval(nextSlide, 4000);\r\n\r\nfunction updateSlide(){\r\n  track.style.transform = `translateX(-${index * 100}%)`;\r\n}\r\n\r\nfunction nextSlide(){\r\n  index = (index + 1) % slides.length;\r\n  updateSlide();\r\n}\r\n\r\nfunction prevSlide(){\r\n  index = (index - 1 + slides.length) % slides.length;\r\n  updateSlide();\r\n}\r\n\r\n// Swipe & drag\r\nconst carousel = document.getElementById('carousel');\r\nlet startX = 0;\r\nlet isDown = false;\r\n\r\ncarousel.addEventListener('touchstart', e => {\r\n  clearInterval(interval);\r\n  startX = e.touches[0].clientX;\r\n});\r\n\r\ncarousel.addEventListener('touchend', e => {\r\n  let diff = e.changedTouches[0].clientX - startX;\r\n  if (Math.abs(diff) > 50){ diff > 0 ? prevSlide() : nextSlide(); }\r\n  interval = setInterval(nextSlide,3000);\r\n});\r\n\r\ncarousel.addEventListener('mousedown', e => {\r\n  clearInterval(interval);\r\n  isDown = true;\r\n  startX = e.clientX;\r\n  carousel.style.cursor = 'grabbing';\r\n});\r\n\r\ncarousel.addEventListener('mouseup', e => {\r\n  if (!isDown) return;\r\n  isDown = false;\r\n  let diff = e.clientX - startX;\r\n  if (Math.abs(diff) > 50){ diff > 0 ? prevSlide() : nextSlide(); }\r\n  carousel.style.cursor = 'grab';\r\n  interval = setInterval(nextSlide,3000);\r\n});\r\n\r\ncarousel.addEventListener('mouseleave', e => {\r\n  if (isDown){\r\n    isDown = false;\r\n    carousel.style.cursor = 'grab';\r\n    interval = setInterval(nextSlide,4000);\r\n  }\r\n});\r\n"]}